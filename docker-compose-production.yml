version: "3.9"

services:
  api:
    container_name: backend_api
    build:
      context: .
    ports:
      - "8000:8000"
    command: sh -c "python manage.py collectstatic --noinput && python manage.py makemigrations && python manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    env_file:
      - ./.envs/.env.production
    depends_on:
      - db
    restart: always

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.env.db

  proxy:
    container_name: "proxy_server"
    build:
      context: ./proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./proxy:/proxy
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /tmp/acme-challenge:/tmp/acme-challenge
    restart: always
    networks:
      - app
volumes:
  dev-db-data:
networks:
  app:
    driver: bridge
