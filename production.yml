version: "3.9"

services:
  api:
    container_name: "backend_api"
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    expose:
      - 8000
    volumes:
      - .:/app
      - static_volume:/app/static
    env_file:
      - ./.envs/.production/.database
      - ./.envs/.production/.django
    restart: always
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - prod-db-data:/var/lib/postgresql/data
    env_file:
      - ./.envs/.production/.database

  proxy:
    build:
      context: ./compose/production/proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/app/static
      # - /etc/letsencrypt:/etc/letsencrypt:ro
      # - /tmp/acme-challenge:/tmp/acme-challenge
    # networks:
    #   - app
    depends_on:
      - api

  # letsencrypt:
  #   container_name: "certbot"
  #   image: certbot/certbot
  #   command: sh -c "certbot certonly --webroot -w /tmp/acme-challenge/ -d test.mrshanas.me --text --agree-tos --email nassibshaban345@gmail.com --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http"
  #   entrypoint: ""
  #   volumes:
  #     - "/etc/letsencrypt:/etc/letsencrypt"
  #     - "/tmp/acme-challenge:/tmp/acme-challenge"
  #   environment:
  #     - TERM=xterm

volumes:
  prod-db-data:
  static_volume:
# networks:
#   app:
#     driver: bridge

